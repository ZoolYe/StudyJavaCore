输入流和输出流相对于内存设备而言
将外设中的数据读取到内存中：输入
将内存中的数据写入到外设中：输出

字符流的由来：
其实就是：字节流读取文字字节数据后，不直接操作，而是先查指定的编码表，获取对应的文字，再对这个文字进行操作(字节流+编码表)

字节流的两个顶层父类：
1，InputStream
2，OutputStream

字符流的两个顶层父类：
1，Reader
2，Writer
这些体系的子类都是以父类名作为后缀，而子类名的前缀，就是该对象的功能

如果要操作文字数据，优先考虑字符流

字符流缓冲区：
BufferedWriter
	:newLine();
BufferedReader:
	:readLine();使用了读取缓冲区中的read方法，将读取到的字符进行缓冲并判断换行标记，将标记前的缓冲数据变成字符串返回
	
装饰设计模式：
对一组对象的功能进行增强时，就可以使用该模式进行问题的解决

装饰和继承都能实现一样的特点：进行功能的扩展增强
有什么区别：
	